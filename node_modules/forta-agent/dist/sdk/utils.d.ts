import { BlockEvent, EventType, Network, Trace, TransactionEvent } from '.';
import { Transaction } from './transaction';
import { Receipt } from './receipt';
import { TxEventBlock } from './transaction.event';
import { Block } from './block';
import { ethers } from '.';
export declare const getEthersProvider: () => ethers.providers.JsonRpcProvider;
export declare const getEthersBatchProvider: () => ethers.providers.JsonRpcBatchProvider;
export declare const getJsonRpcUrl: () => string;
export declare const createTransactionEvent: ({ type, network, transaction, receipt, traces, addresses, block }: {
    type?: EventType | undefined;
    network?: Network | undefined;
    transaction: Transaction;
    receipt: Receipt;
    traces?: Trace[] | undefined;
    addresses?: {
        [key: string]: boolean;
    } | undefined;
    block: TxEventBlock;
}) => TransactionEvent;
export declare const createBlockEvent: ({ type, network, block }: {
    type?: EventType | undefined;
    network?: Network | undefined;
    block: Block;
}) => BlockEvent;
export declare const assertIsNonEmptyString: (str: string, varName: string) => void;
export declare const assertIsFromEnum: (value: any, Enum: any, varName: string) => void;
export declare const keccak256: (str: string) => string;
