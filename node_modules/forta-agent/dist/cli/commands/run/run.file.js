"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.provideRunFile = void 0;
var utils_1 = require("../../utils");
function provideRunFile(getAgentHandlers, getJsonFile) {
    utils_1.assertExists(getAgentHandlers, 'getAgentHandlers');
    utils_1.assertExists(getJsonFile, 'getJsonFile');
    return function runFile(filePath) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, handleBlock, handleTransaction, _b, transactionEvents, blockEvents, _i, blockEvents_1, blockEvent, findings, _c, transactionEvents_1, transactionEvent, findings;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0: return [4, getAgentHandlers()];
                    case 1:
                        _a = _d.sent(), handleBlock = _a.handleBlock, handleTransaction = _a.handleTransaction;
                        if (!handleBlock && !handleTransaction) {
                            throw new Error("no block/transaction handler found");
                        }
                        console.log('parsing file data...');
                        _b = getJsonFile(filePath), transactionEvents = _b.transactionEvents, blockEvents = _b.blockEvents;
                        if (!(handleBlock && (blockEvents === null || blockEvents === void 0 ? void 0 : blockEvents.length))) return [3, 5];
                        console.log('running block events...');
                        _i = 0, blockEvents_1 = blockEvents;
                        _d.label = 2;
                    case 2:
                        if (!(_i < blockEvents_1.length)) return [3, 5];
                        blockEvent = blockEvents_1[_i];
                        return [4, handleBlock(blockEvent)];
                    case 3:
                        findings = _d.sent();
                        console.log(findings.length + " findings for block " + blockEvent.hash + " " + findings);
                        _d.label = 4;
                    case 4:
                        _i++;
                        return [3, 2];
                    case 5:
                        if (!(handleTransaction && (transactionEvents === null || transactionEvents === void 0 ? void 0 : transactionEvents.length))) return [3, 9];
                        console.log('running transaction events...');
                        _c = 0, transactionEvents_1 = transactionEvents;
                        _d.label = 6;
                    case 6:
                        if (!(_c < transactionEvents_1.length)) return [3, 9];
                        transactionEvent = transactionEvents_1[_c];
                        return [4, handleTransaction(transactionEvent)];
                    case 7:
                        findings = _d.sent();
                        console.log(findings.length + " findings for transaction " + transactionEvent.transaction.hash + " " + findings);
                        _d.label = 8;
                    case 8:
                        _c++;
                        return [3, 6];
                    case 9: return [2];
                }
            });
        });
    };
}
exports.provideRunFile = provideRunFile;
